{"ast":null,"code":"var _jsxFileName = \"/Users/thienma/Documents/GitHub/keey-token/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Web3 from 'web3';\nimport { useState, useEffect, useCallback } from 'react';\nimport detectProvider from '@metamask/detect-provider';\nimport { loadContract } from './untils/load-contract';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [web3Api, setweb3Api] = useState({\n    provider: null,\n    web3: null,\n    //contract:null,\n    icoToken: null\n  });\n  const [account, setAccount] = useState(null);\n  const [balance, setBalance] = useState(null);\n  const [availableTokens, setAvailableTokens] = useState(null);\n  const [lastReceiced, setLastReceiced] = useState(null); //const [shouldReload, reload] = useState(null)\n\n  const [valueBuy, setValueBuy] = useState(0);\n  const [totalEtherPay, setTotalEtherPay] = useState(0);\n  const [totalUSDTPay, setTotalUSDTPay] = useState(0);\n  const price = 1;\n  const priceUSDT = 10000;\n  useEffect(() => {\n    const loadProvider = async () => {\n      const provider = await detectProvider(); //const contract = await loadContract(\"KEEYToken\",provider); \n\n      const icoToken = await loadContract(\"BuyKEEYTokens\", provider);\n\n      if (provider) {\n        setweb3Api({\n          web3: new Web3(provider),\n          provider,\n          icoToken\n        });\n      } else {\n        console.error(\"Please, Install Metamask !!!\");\n      }\n    };\n\n    loadProvider();\n  }, []);\n  useEffect(() => {\n    const loadBalance = async () => {\n      const {\n        icoToken\n      } = web3Api;\n      const account = await web3Api.web3.eth.getAccounts(); //const admin = await icoToken.admin();\n\n      const availableToken = await icoToken.balanceOf(icoToken.address);\n      setAvailableTokens(availableToken.words[0], \"KEEY\"); //const test = await icoToken.price.call();\n\n      if (account !== null && account[0] !== undefined) {\n        const balance = await icoToken.balanceOf(account[0]);\n        setBalance(balance.words[0], \"KEEY\");\n        const lastReceiced = await icoToken.getLastReceiced(account[0]);\n        setLastReceiced(lastReceiced);\n      } else {\n        setBalance(0, \"KEEY\");\n      }\n\n      setAccount(account[0]);\n    };\n\n    web3Api.icoToken && loadBalance();\n  }, [web3Api]);\n  const buyTokenKeeyUSDT = useCallback(async () => {\n    const {\n      web3,\n      icoToken\n    } = web3Api;\n\n    if (valueBuy <= 0) {\n      alert(\"You need to buy at least some tokens\");\n      return;\n    }\n\n    if (balance + totalUSDTPay / priceUSDT > 2) {\n      alert(\"Wallet buys up to 2 KEEY\");\n      return;\n    }\n\n    if (totalUSDTPay % priceUSDT !== 0) {\n      alert(\"Have to send a multiple of price\");\n      return;\n    }\n\n    if (lastReceiced) {\n      alert(\"Just 01 tranfer per day for this address!!!\");\n      return;\n    }\n\n    await icoToken.buyKeeyUSDT(web3.utils.toWei(totalUSDTPay.toString(), 'ether'), {\n      from: account\n    });\n  }, [web3Api, account, totalUSDTPay, balance, valueBuy, lastReceiced, priceUSDT]);\n  const buyToken = useCallback(async () => {\n    const {\n      web3,\n      icoToken\n    } = web3Api;\n\n    if (valueBuy <= 0) {\n      alert(\"You need to buy at least some tokens\");\n      return;\n    }\n\n    if (balance + totalEtherPay / price > 2) {\n      alert(\"Wallet buys up to 2 KEEY\");\n      return;\n    }\n\n    if (totalEtherPay % price !== 0) {\n      alert(\"Have to send a multiple of price\");\n      return;\n    }\n\n    if (lastReceiced) {\n      alert(\"Just 01 tranfer per day for this address!!!\");\n      return;\n    }\n\n    await icoToken.buy({\n      from: account,\n      value: web3.utils.toWei(totalEtherPay.toString(), 'ether')\n    });\n  }, [web3Api, account, totalEtherPay, balance, valueBuy, lastReceiced, price]);\n\n  const total = async e => {\n    setValueBuy(e.currentTarget.value);\n    setTotalEtherPay(e.currentTarget.value * price);\n    setTotalUSDTPay(e.currentTarget.value * priceUSDT);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keeytoken\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"is-size-2\",\n        children: \"Buy Keey Token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Total tokens on sale : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), availableTokens, \" KEEY\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button is-link mr-3\",\n          onClick: () => {\n            web3Api.provider.request({\n              method: \"eth_requestAccounts\"\n            });\n          },\n          children: \"Connect Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"input is-primary\",\n            onChange: total\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"columns mt-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button is-primary\",\n            onClick: () => {\n              buyToken();\n            },\n            children: \"Buy KEEY with ETH\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button is-primary\",\n            onClick: () => {\n              buyTokenKeeyUSDT();\n            },\n            children: \"Buy KEEY with USDT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Buy:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 14\n          }, this), valueBuy, \" KEEY\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Price:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 14\n          }, this), price, \" ETH or \", priceUSDT, \" USDT\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Total:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 14\n          }, this), totalEtherPay, \" ETH or \", totalUSDTPay, \" USDT\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Accounts Address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 14\n          }, this), account ? account : \"Account not login\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"BalanceOf:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 14\n          }, this), balance ? balance : '0', \" KEEY\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"UnHeMYAQ1tQd8QFRQZA8zDNZe/c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/thienma/Documents/GitHub/keey-token/client/src/App.js"],"names":["Web3","useState","useEffect","useCallback","detectProvider","loadContract","App","web3Api","setweb3Api","provider","web3","icoToken","account","setAccount","balance","setBalance","availableTokens","setAvailableTokens","lastReceiced","setLastReceiced","valueBuy","setValueBuy","totalEtherPay","setTotalEtherPay","totalUSDTPay","setTotalUSDTPay","price","priceUSDT","loadProvider","console","error","loadBalance","eth","getAccounts","availableToken","balanceOf","address","words","undefined","getLastReceiced","buyTokenKeeyUSDT","alert","buyKeeyUSDT","utils","toWei","toString","from","buyToken","buy","value","total","e","currentTarget","request","method"],"mappings":"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","sourcesContent":["import './App.css';\nimport Web3 from 'web3';\nimport {useState,useEffect,useCallback} from 'react'; \nimport detectProvider from '@metamask/detect-provider'\nimport {loadContract} from './untils/load-contract'\n\nfunction App() {\n  const [web3Api,setweb3Api] = useState({\n    provider: null,\n    web3: null,\n    //contract:null,\n    icoToken:null,\n  });\n\n  const [account, setAccount] = useState(null)\n  const [balance, setBalance] = useState(null)\n  const [availableTokens, setAvailableTokens] = useState(null)\n  const [lastReceiced,setLastReceiced] = useState(null)\n\n  //const [shouldReload, reload] = useState(null)\n\n  const [valueBuy, setValueBuy] = useState(0)\n  const [totalEtherPay, setTotalEtherPay] = useState(0)\n  const [totalUSDTPay, setTotalUSDTPay] = useState(0)\n  const price = 1;\n  const priceUSDT = 10000;\n\n  useEffect( () =>{\n    const loadProvider = async () =>{\n      const provider = await detectProvider();  \n      //const contract = await loadContract(\"KEEYToken\",provider); \n      const icoToken = await loadContract(\"BuyKEEYTokens\",provider)\n      if(provider){\n        setweb3Api({\n          web3: new Web3(provider),\n          provider,\n          icoToken,\n        })\n      }else{\n        console.error(\"Please, Install Metamask !!!\")\n      }\n    }\n    loadProvider();\n  },[]);\n\n  useEffect(()=>{\n    const loadBalance =  async ()=>{\n      const {icoToken} = web3Api;\n      const account = await web3Api.web3.eth.getAccounts();\n      //const admin = await icoToken.admin();\n      const availableToken = await icoToken.balanceOf(icoToken.address);\n      setAvailableTokens(availableToken.words[0], \"KEEY\")\n\n      //const test = await icoToken.price.call();\n        \n      if(account !== null &&account[0] !== undefined){\n        const balance = await icoToken.balanceOf(account[0]);\n        setBalance(balance.words[0], \"KEEY\");\n\n        const lastReceiced = await icoToken.getLastReceiced(account[0]);\n        setLastReceiced(lastReceiced);\n      }else{\n        setBalance(0, \"KEEY\");\n      }\n\n      setAccount(account[0])\n    }\n    web3Api.icoToken && loadBalance()\n  },[web3Api]);\n\n  const buyTokenKeeyUSDT = useCallback(async ()=>{\n    const {web3,icoToken} = web3Api;\n\n    if  (valueBuy <= 0){\n      alert(\"You need to buy at least some tokens\")\n      return\n    }\n\n    if ((balance + (totalUSDTPay / priceUSDT)) > 2) {\n      alert(\"Wallet buys up to 2 KEEY\")\n      return\n    }\n\n    if(totalUSDTPay % priceUSDT !== 0){\n      alert(\"Have to send a multiple of price\")\n      return\n    }\n\n  \n    if (lastReceiced) {\n      alert(\"Just 01 tranfer per day for this address!!!\")\n      return\n    }\n\n\n    await icoToken.buyKeeyUSDT(\n      web3.utils.toWei(totalUSDTPay.toString(),'ether'),\n      {\n      from: account,\n    });\n\n  },[web3Api,account,totalUSDTPay,balance,valueBuy,lastReceiced,priceUSDT])\n\n  const buyToken = useCallback(async ()=>{\n    const {web3,icoToken} = web3Api;\n\n    if  (valueBuy <= 0){\n      alert(\"You need to buy at least some tokens\")\n      return\n    }\n\n    if ((balance + (totalEtherPay / price)) > 2) {\n      alert(\"Wallet buys up to 2 KEEY\")\n      return\n    }\n\n    if(totalEtherPay % price !== 0){\n      alert(\"Have to send a multiple of price\")\n      return\n    }\n\n  \n    if (lastReceiced) {\n      alert(\"Just 01 tranfer per day for this address!!!\")\n      return\n    }\n\n\n    await icoToken.buy({\n      from: account,\n      value: web3.utils.toWei(totalEtherPay.toString(),'ether')\n    });\n\n  },[web3Api,account,totalEtherPay,balance,valueBuy,lastReceiced,price])\n\n  const total = async (e) =>{\n      setValueBuy(e.currentTarget.value)\n      setTotalEtherPay(e.currentTarget.value * price)\n      setTotalUSDTPay(e.currentTarget.value * priceUSDT)\n  }\n\n \n  return (\n    <div className=\"App\">\n      <div className=\"keeytoken\">\n        <h2 className=\"is-size-2\">Buy Keey Token</h2>\n        <div>\n          <b>Total tokens on sale : </b>{availableTokens} KEEY\n        </div>\n        <hr/>\n        <div>\n          <button className=\"button is-link mr-3\"\n            onClick = {()=>{\n              web3Api.provider.request({method: \"eth_requestAccounts\"})\n            }}\n          >Connect Wallet</button>\n        </div>\n        <div className=\"mt-3\">\n          <div>\n            <input type=\"number\" className=\"input is-primary\" onChange={total}/>\n          </div>\n          \n        </div>\n          <div className=\"columns mt-1\">\n          <div className=\"column\">\n          <button className=\"button is-primary\"\n            onClick ={ () => {\n              buyToken();\n            }}\n          >Buy KEEY with ETH</button>\n          </div>\n          <div className=\"column\">\n          <button className=\"button is-primary\"\n            onClick ={\n              ()=>{\n                buyTokenKeeyUSDT();\n              }\n            }\n          >Buy KEEY with USDT</button>\n          </div>\n        </div>\n        \n        <div className=\"mt-2\">\n          <p><b>Buy:</b>{valueBuy} KEEY</p>\n          <p><b>Price:</b>{price} ETH or {priceUSDT} USDT</p>\n          <p><b>Total:</b>{totalEtherPay} ETH or {totalUSDTPay} USDT</p>\n        </div>\n        <div>\n          <hr/>\n          <p><strong>Accounts Address:</strong> \n          {\n            account ? account : \"Account not login\"\n          }\n          </p>\n          <p><strong>BalanceOf:</strong>{balance ? balance : '0'} KEEY</p>\n        </div>\n        \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}