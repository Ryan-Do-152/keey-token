{"ast":null,"code":"import { array } from './array.js';\nimport { constantFrom } from './constantFrom.js';\nimport { constant } from './constant.js';\nimport { option } from './option.js';\nimport { tuple } from './tuple.js';\nimport { webQueryParameters } from './webQueryParameters.js';\nimport { webFragments } from './webFragments.js';\nimport { webAuthority } from './webAuthority.js';\nimport { webSegment } from './webSegment.js';\nimport { convertFromNext, convertToNext } from '../check/arbitrary/definition/Converters.js';\nimport { partsToUrlMapper, partsToUrlUnmapper } from './_internals/mappers/PartsToUrl.js';\nimport { segmentsToPathMapper, segmentsToPathUnmapper } from './_internals/mappers/SegmentsToPath.js';\nexport function webUrl(constraints) {\n  const c = constraints || {};\n  const validSchemes = c.validSchemes || ['http', 'https'];\n  const schemeArb = constantFrom(...validSchemes);\n  const authorityArb = webAuthority(c.authoritySettings);\n  const pathArb = convertFromNext(convertToNext(array(webSegment())).map(segmentsToPathMapper, segmentsToPathUnmapper));\n  return convertFromNext(convertToNext(tuple(schemeArb, authorityArb, pathArb, c.withQueryParameters === true ? option(webQueryParameters()) : constant(null), c.withFragments === true ? option(webFragments()) : constant(null))).map(partsToUrlMapper, partsToUrlUnmapper));\n}","map":{"version":3,"sources":["/Users/thienma/Documents/GitHub/keey-token/client/node_modules/fast-check/lib/esm/arbitrary/webUrl.js"],"names":["array","constantFrom","constant","option","tuple","webQueryParameters","webFragments","webAuthority","webSegment","convertFromNext","convertToNext","partsToUrlMapper","partsToUrlUnmapper","segmentsToPathMapper","segmentsToPathUnmapper","webUrl","constraints","c","validSchemes","schemeArb","authorityArb","authoritySettings","pathArb","map","withQueryParameters","withFragments"],"mappings":"AAAA,SAASA,KAAT,QAAsB,YAAtB;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,SAASC,kBAAT,QAAmC,yBAAnC;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,eAAT,EAA0BC,aAA1B,QAA+C,6CAA/C;AACA,SAASC,gBAAT,EAA2BC,kBAA3B,QAAqD,oCAArD;AACA,SAASC,oBAAT,EAA+BC,sBAA/B,QAA6D,wCAA7D;AACA,OAAO,SAASC,MAAT,CAAgBC,WAAhB,EAA6B;AAChC,QAAMC,CAAC,GAAGD,WAAW,IAAI,EAAzB;AACA,QAAME,YAAY,GAAGD,CAAC,CAACC,YAAF,IAAkB,CAAC,MAAD,EAAS,OAAT,CAAvC;AACA,QAAMC,SAAS,GAAGlB,YAAY,CAAC,GAAGiB,YAAJ,CAA9B;AACA,QAAME,YAAY,GAAGb,YAAY,CAACU,CAAC,CAACI,iBAAH,CAAjC;AACA,QAAMC,OAAO,GAAGb,eAAe,CAACC,aAAa,CAACV,KAAK,CAACQ,UAAU,EAAX,CAAN,CAAb,CAAmCe,GAAnC,CAAuCV,oBAAvC,EAA6DC,sBAA7D,CAAD,CAA/B;AACA,SAAOL,eAAe,CAACC,aAAa,CAACN,KAAK,CAACe,SAAD,EAAYC,YAAZ,EAA0BE,OAA1B,EAAmCL,CAAC,CAACO,mBAAF,KAA0B,IAA1B,GAAiCrB,MAAM,CAACE,kBAAkB,EAAnB,CAAvC,GAAgEH,QAAQ,CAAC,IAAD,CAA3G,EAAmHe,CAAC,CAACQ,aAAF,KAAoB,IAApB,GAA2BtB,MAAM,CAACG,YAAY,EAAb,CAAjC,GAAoDJ,QAAQ,CAAC,IAAD,CAA/K,CAAN,CAAb,CAA2MqB,GAA3M,CAA+MZ,gBAA/M,EAAiOC,kBAAjO,CAAD,CAAtB;AACH","sourcesContent":["import { array } from './array.js';\nimport { constantFrom } from './constantFrom.js';\nimport { constant } from './constant.js';\nimport { option } from './option.js';\nimport { tuple } from './tuple.js';\nimport { webQueryParameters } from './webQueryParameters.js';\nimport { webFragments } from './webFragments.js';\nimport { webAuthority } from './webAuthority.js';\nimport { webSegment } from './webSegment.js';\nimport { convertFromNext, convertToNext } from '../check/arbitrary/definition/Converters.js';\nimport { partsToUrlMapper, partsToUrlUnmapper } from './_internals/mappers/PartsToUrl.js';\nimport { segmentsToPathMapper, segmentsToPathUnmapper } from './_internals/mappers/SegmentsToPath.js';\nexport function webUrl(constraints) {\n    const c = constraints || {};\n    const validSchemes = c.validSchemes || ['http', 'https'];\n    const schemeArb = constantFrom(...validSchemes);\n    const authorityArb = webAuthority(c.authoritySettings);\n    const pathArb = convertFromNext(convertToNext(array(webSegment())).map(segmentsToPathMapper, segmentsToPathUnmapper));\n    return convertFromNext(convertToNext(tuple(schemeArb, authorityArb, pathArb, c.withQueryParameters === true ? option(webQueryParameters()) : constant(null), c.withFragments === true ? option(webFragments()) : constant(null))).map(partsToUrlMapper, partsToUrlUnmapper));\n}\n"]},"metadata":{},"sourceType":"module"}