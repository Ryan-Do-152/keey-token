{"ast":null,"code":"import { boolean } from '../../boolean.js';\nimport { constant } from '../../constant.js';\nimport { double } from '../../double.js';\nimport { maxSafeInteger } from '../../maxSafeInteger.js';\nimport { oneof } from '../../oneof.js';\nimport { string } from '../../string.js';\nimport { boxedArbitraryBuilder } from '../builders/BoxedArbitraryBuilder.js';\n\nfunction defaultValues() {\n  return [boolean(), maxSafeInteger(), double({\n    next: true\n  }), string(), oneof(string(), constant(null), constant(undefined))];\n}\n\nfunction boxArbitraries(arbs) {\n  return arbs.map(arb => boxedArbitraryBuilder(arb));\n}\n\nfunction boxArbitrariesIfNeeded(arbs, boxEnabled) {\n  return boxEnabled ? boxArbitraries(arbs).concat(arbs) : arbs;\n}\n\nexport function toQualifiedObjectConstraints(settings = {}) {\n  function orDefault(optionalValue, defaultValue) {\n    return optionalValue !== undefined ? optionalValue : defaultValue;\n  }\n\n  return {\n    key: orDefault(settings.key, string()),\n    values: boxArbitrariesIfNeeded(orDefault(settings.values, defaultValues()), orDefault(settings.withBoxedValues, false)),\n    depthFactor: orDefault(settings.depthFactor, 0),\n    maxDepth: orDefault(settings.maxDepth, 2),\n    maxKeys: orDefault(settings.maxKeys, 5),\n    withSet: orDefault(settings.withSet, false),\n    withMap: orDefault(settings.withMap, false),\n    withObjectString: orDefault(settings.withObjectString, false),\n    withNullPrototype: orDefault(settings.withNullPrototype, false),\n    withBigInt: orDefault(settings.withBigInt, false),\n    withDate: orDefault(settings.withDate, false),\n    withTypedArray: orDefault(settings.withTypedArray, false),\n    withSparseArray: orDefault(settings.withSparseArray, false)\n  };\n}","map":{"version":3,"sources":["/Users/thienma/Documents/GitHub/keey-token/client/node_modules/fast-check/lib/esm/arbitrary/_internals/helpers/QualifiedObjectConstraints.js"],"names":["boolean","constant","double","maxSafeInteger","oneof","string","boxedArbitraryBuilder","defaultValues","next","undefined","boxArbitraries","arbs","map","arb","boxArbitrariesIfNeeded","boxEnabled","concat","toQualifiedObjectConstraints","settings","orDefault","optionalValue","defaultValue","key","values","withBoxedValues","depthFactor","maxDepth","maxKeys","withSet","withMap","withObjectString","withNullPrototype","withBigInt","withDate","withTypedArray","withSparseArray"],"mappings":"AAAA,SAASA,OAAT,QAAwB,kBAAxB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,cAAT,QAA+B,yBAA/B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,qBAAT,QAAsC,sCAAtC;;AACA,SAASC,aAAT,GAAyB;AACrB,SAAO,CACHP,OAAO,EADJ,EAEHG,cAAc,EAFX,EAGHD,MAAM,CAAC;AAAEM,IAAAA,IAAI,EAAE;AAAR,GAAD,CAHH,EAIHH,MAAM,EAJH,EAKHD,KAAK,CAACC,MAAM,EAAP,EAAWJ,QAAQ,CAAC,IAAD,CAAnB,EAA2BA,QAAQ,CAACQ,SAAD,CAAnC,CALF,CAAP;AAOH;;AACD,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAC1B,SAAOA,IAAI,CAACC,GAAL,CAAUC,GAAD,IAASP,qBAAqB,CAACO,GAAD,CAAvC,CAAP;AACH;;AACD,SAASC,sBAAT,CAAgCH,IAAhC,EAAsCI,UAAtC,EAAkD;AAC9C,SAAOA,UAAU,GAAGL,cAAc,CAACC,IAAD,CAAd,CAAqBK,MAArB,CAA4BL,IAA5B,CAAH,GAAuCA,IAAxD;AACH;;AACD,OAAO,SAASM,4BAAT,CAAsCC,QAAQ,GAAG,EAAjD,EAAqD;AACxD,WAASC,SAAT,CAAmBC,aAAnB,EAAkCC,YAAlC,EAAgD;AAC5C,WAAOD,aAAa,KAAKX,SAAlB,GAA8BW,aAA9B,GAA8CC,YAArD;AACH;;AACD,SAAO;AACHC,IAAAA,GAAG,EAAEH,SAAS,CAACD,QAAQ,CAACI,GAAV,EAAejB,MAAM,EAArB,CADX;AAEHkB,IAAAA,MAAM,EAAET,sBAAsB,CAACK,SAAS,CAACD,QAAQ,CAACK,MAAV,EAAkBhB,aAAa,EAA/B,CAAV,EAA8CY,SAAS,CAACD,QAAQ,CAACM,eAAV,EAA2B,KAA3B,CAAvD,CAF3B;AAGHC,IAAAA,WAAW,EAAEN,SAAS,CAACD,QAAQ,CAACO,WAAV,EAAuB,CAAvB,CAHnB;AAIHC,IAAAA,QAAQ,EAAEP,SAAS,CAACD,QAAQ,CAACQ,QAAV,EAAoB,CAApB,CAJhB;AAKHC,IAAAA,OAAO,EAAER,SAAS,CAACD,QAAQ,CAACS,OAAV,EAAmB,CAAnB,CALf;AAMHC,IAAAA,OAAO,EAAET,SAAS,CAACD,QAAQ,CAACU,OAAV,EAAmB,KAAnB,CANf;AAOHC,IAAAA,OAAO,EAAEV,SAAS,CAACD,QAAQ,CAACW,OAAV,EAAmB,KAAnB,CAPf;AAQHC,IAAAA,gBAAgB,EAAEX,SAAS,CAACD,QAAQ,CAACY,gBAAV,EAA4B,KAA5B,CARxB;AASHC,IAAAA,iBAAiB,EAAEZ,SAAS,CAACD,QAAQ,CAACa,iBAAV,EAA6B,KAA7B,CATzB;AAUHC,IAAAA,UAAU,EAAEb,SAAS,CAACD,QAAQ,CAACc,UAAV,EAAsB,KAAtB,CAVlB;AAWHC,IAAAA,QAAQ,EAAEd,SAAS,CAACD,QAAQ,CAACe,QAAV,EAAoB,KAApB,CAXhB;AAYHC,IAAAA,cAAc,EAAEf,SAAS,CAACD,QAAQ,CAACgB,cAAV,EAA0B,KAA1B,CAZtB;AAaHC,IAAAA,eAAe,EAAEhB,SAAS,CAACD,QAAQ,CAACiB,eAAV,EAA2B,KAA3B;AAbvB,GAAP;AAeH","sourcesContent":["import { boolean } from '../../boolean.js';\nimport { constant } from '../../constant.js';\nimport { double } from '../../double.js';\nimport { maxSafeInteger } from '../../maxSafeInteger.js';\nimport { oneof } from '../../oneof.js';\nimport { string } from '../../string.js';\nimport { boxedArbitraryBuilder } from '../builders/BoxedArbitraryBuilder.js';\nfunction defaultValues() {\n    return [\n        boolean(),\n        maxSafeInteger(),\n        double({ next: true }),\n        string(),\n        oneof(string(), constant(null), constant(undefined)),\n    ];\n}\nfunction boxArbitraries(arbs) {\n    return arbs.map((arb) => boxedArbitraryBuilder(arb));\n}\nfunction boxArbitrariesIfNeeded(arbs, boxEnabled) {\n    return boxEnabled ? boxArbitraries(arbs).concat(arbs) : arbs;\n}\nexport function toQualifiedObjectConstraints(settings = {}) {\n    function orDefault(optionalValue, defaultValue) {\n        return optionalValue !== undefined ? optionalValue : defaultValue;\n    }\n    return {\n        key: orDefault(settings.key, string()),\n        values: boxArbitrariesIfNeeded(orDefault(settings.values, defaultValues()), orDefault(settings.withBoxedValues, false)),\n        depthFactor: orDefault(settings.depthFactor, 0),\n        maxDepth: orDefault(settings.maxDepth, 2),\n        maxKeys: orDefault(settings.maxKeys, 5),\n        withSet: orDefault(settings.withSet, false),\n        withMap: orDefault(settings.withMap, false),\n        withObjectString: orDefault(settings.withObjectString, false),\n        withNullPrototype: orDefault(settings.withNullPrototype, false),\n        withBigInt: orDefault(settings.withBigInt, false),\n        withDate: orDefault(settings.withDate, false),\n        withTypedArray: orDefault(settings.withTypedArray, false),\n        withSparseArray: orDefault(settings.withSparseArray, false),\n    };\n}\n"]},"metadata":{},"sourceType":"module"}